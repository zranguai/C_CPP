工作区:
暂存区:
版本库:

还原: 一旦文件修改之后提交了, 就不能还原了.
      修改文件之后, 若没有提交, 可以进行还原.
      若误操作删除了文件, 可以进行还原.
    
删除:
	删除之后要提交   
	
添加忽略列表:
	有些文件(如库文件, 可执行文件)不需要让git管理, 可以添加到忽略列表.

综合的案例:
1 新建一个远程仓库
2 在本地建立本地仓库
3 将本地仓库推送到远程仓库
4 将远程仓库克隆到本地仓库
5 修改本地仓库, 在本地仓库提交, 
  然后再同步, 修改的文件就会被同步到远程仓库
6 修改远程仓库的文件, 然后提交修改.
7 拉取远程仓库修改的文件.

使用ssh协议同步文件:
生成秘钥: ssh-keygen -t 
若本地开始公钥和私钥, 最后是先删除, 然后重新生成;
1 首先需要生成秘钥: 是一个秘钥对, 私钥和公钥
  本地仓库用私钥, 远程仓库使用公钥
2 克隆和拉取
  克隆: 本地仓库还没有的时候使用克隆;
  拉取: 本地仓库已经存在了, 从远程仓库下载文件使用拉取.
  
分支操作:
1 创建分支
2 切换分支
3 合并分支
  合并是将自分支合并到主分支;
  若合并的时候, 自分支与主分支都修改过相同的文件, 则需要解决冲突, 
  解决冲突需要人为干预.
  若合并分支的时候, 自分支有某些文件, 而自分支没有, 则没有冲突发生.
4 解决冲突