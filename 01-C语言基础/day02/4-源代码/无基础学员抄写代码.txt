
------------------------------------------抄写练习1：

#include <stdio.h>

#define N 1024		

int main(void)
{
	int a = 10;		
	
	printf("这是一个常量 N:%d\n", N);
	
	printf("这是一个变量 a:%d\n", a);
	
	system("pause");

	return EXIT_SUCCESS;
}

------------------------------------------抄写练习2：

#include <stdio.h>

#define PI 3.1415			

int main(void)
{
	const int r = 3;				// 定义一个只读变量	
	
	//圆的面积 = PI x 半径的平方
	float s = PI * r * r;
	
	//圆的周长 = 2 x PI x 半径	
	float l = 2 * PI * r;

	printf("圆的周长为：%f\n", l);	// 默认显示 6 位小数。
	printf("圆的面积为：%f\n", s);	
	
	printf("圆的周长还可以写成：%.2f\n", PI * r * r);
	printf("圆的面积还可以写成：%.2f\n", 2 * PI * r);	// 指定保留小数点后保留2位，对第3位进行4舍五入

	return 0;
}

------------------------------------------抄写练习3：

#include <stdio.h>		

int main(void)
{
	int var = 54；			// 定义一个变量 var, 定义的同时指定初值为 54
	
	var = 238;			// 使用变量，给变量var赋新值 238

	printf("var = %d\n", var);	//  使用变量，打印变量var的值到屏幕。

	return 0;
}

------------------------------------------抄写练习4：

#include <stdio.h>

int main(void)
{
	int a = 10;			// 定义有符号整数 a, 给a赋初值为 10
	short b = 20;		// 定义有符号整数 b, 给a赋初值为 20
	long c = 30L;		// 定义有符号整数 c, 给a赋初值为 30, 可以简写为 long c = 30;
	long long d = 40LL;	// 定义有符号整数 d, 给a赋初值为 40, 可以简写为 long long d = 40;

	printf("sizeof(a)= %u\n", sizeof(a));
	printf("sizeof(b)= %u\n", sizeof(b));
	printf("sizeof(c)= %u\n", sizeof(c));
	printf("sizeof(d)= %u\n", sizeof(d));

	printf("按类型, int 大小为：%u\n", sizeof(int));
	printf("按类型, short 大小为：%u\n", sizeof(short));
	printf("按类型, long 大小为：%u\n", sizeof(long));
	printf("按类型, long long 大小为：%u\n", sizeof(long long));

	system("pause");

	return EXIT_SUCCESS;
}

------------------------------------------抄写练习5：
#include <stdio.h>

int main(void)
{
	unsigned int a = 10u;			// 定义无符号整数 a, 给a赋初值为 10, 可以简写为 unsigned int a = 10;
	unsigned short b = 20u;			// 定义无符号整数 b, 给a赋初值为 20, 可以简写为 unsigned short a = 10;
	unsigned long c = 30Lu;			// 定义无符号整数 c, 给a赋初值为 30, 可以简写为 unsigned long c = 30;
	unsigned long long d = 40LLu;	// 定义无符号整数 d, 给a赋初值为 40, 可以简写为 unsigned long long d = 40;

	printf("sizeof(a)= %u\n", sizeof(a));	//按变量名 求变量 a 的大小
	printf("sizeof(b)= %u\n", sizeof(b));	//按变量名 求变量 b 的大小
	printf("sizeof(c)= %u\n", sizeof(c));	//按变量名 求变量 c 的大小
	printf("sizeof(d)= %u\n", sizeof(d));	//按变量名 求变量 d 的大小

	printf("按类型, unsigned int 大小为：%u\n", sizeof(unsigned int));
	printf("按类型, unsigned short 大小为：%u\n", sizeof(unsigned short));
	printf("按类型, unsigned long 大小为：%u\n", sizeof(unsigned long));
	printf("按类型, unsigned long long 大小为：%u\n", sizeof(unsigned long long));

	system("pause");

	return EXIT_SUCCESS;
}

------------------------------------------抄写练习6：
#include <stdio.h>

int main(void)
{
	char ch = 'a';
	printf("sizeof(ch) = %u\n", sizeof(ch));
	
	printf("%c\n", 97);		//字符'a'
	printf("%c\n", 65);		//字符'A'

	char A = 'A';		// 定义字符变量 A, 初值为 ‘A’
	char a = 'a';		// 定义字符变量 a, 初值为 ‘a’
	
	printf("a = %d\n", a);		//字符'a'的ASCII的值97
	printf("A = %d\n", A);		//字符'A'的ASCII的值65

	printf("A = %c\n", 'a' - 32); //小写a转大写A
	printf("a = %c\n", 'A' + 32); //大写A转小写a
	
	ch = ' ';
	printf("空格ASCII的值：%d\n", ch);    		//空格ASCII的值 32
	printf("\'\\n\'ASCII的值：%d\n", '\n');  	//换行符ASCII的值 10
	printf("字符\'\\0\'：%d\n", '\0');  	//字符'\0'的ASCII的值 0
	printf("字符\'0\'：%d\n", '0');  		//字符'0'的ASCII的值 48
	
	return 0;
}

------------------------------------------抄写练习7：

#include <stdio.h>

int main(void)
{
	char ch;		// 有符号 char 型数据，取值范围 -128~127

	//符号位溢出会导致数的正负发生改变
	ch = 0x7f + 2; 	//因为：0x7f == 0111 1111 == 127,所以 等价于 ch = 127 + 2; 
	printf("%d\n", ch);	
	//	   0111 1111
	//+2后 1000 0001，这是负数补码，其原码为 1111 1111，结果为-127

	//最高位的溢出会导致最高位丢失
	unsigned char ch2;
	ch2 = 0xff+1; 	//因为：0xff == 255 == 1111 1111,所以 等价于 ch2 = 255 + 1; 
	printf("%u\n", ch2);
	//		1111 1111
	//+1后 10000 0000， char只有8位最高位的溢出，结果为0000 0000，十进制为0

	ch2 = 0xff + 2; //因为：0xff == 255 == 1111 1111,所以 等价于 ch2 = 255 + 2; 
	printf("%u\n", ch2);
	//		1111 1111
	//+1后 10000 0001， char只有8位最高位的溢出，结果为0000 0001，十进制为1

	return 0;
}

















